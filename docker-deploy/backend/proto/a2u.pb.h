// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: a2u.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_a2u_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_a2u_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_a2u_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_a2u_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_a2u_2eproto;
namespace a2u {
class AToU;
struct AToUDefaultTypeInternal;
extern AToUDefaultTypeInternal _AToU_default_instance_;
class change_destination;
struct change_destinationDefaultTypeInternal;
extern change_destinationDefaultTypeInternal _change_destination_default_instance_;
class ready_for_delivery;
struct ready_for_deliveryDefaultTypeInternal;
extern ready_for_deliveryDefaultTypeInternal _ready_for_delivery_default_instance_;
class request_truck;
struct request_truckDefaultTypeInternal;
extern request_truckDefaultTypeInternal _request_truck_default_instance_;
class world_info;
struct world_infoDefaultTypeInternal;
extern world_infoDefaultTypeInternal _world_info_default_instance_;
}  // namespace a2u
PROTOBUF_NAMESPACE_OPEN
template<> ::a2u::AToU* Arena::CreateMaybeMessage<::a2u::AToU>(Arena*);
template<> ::a2u::change_destination* Arena::CreateMaybeMessage<::a2u::change_destination>(Arena*);
template<> ::a2u::ready_for_delivery* Arena::CreateMaybeMessage<::a2u::ready_for_delivery>(Arena*);
template<> ::a2u::request_truck* Arena::CreateMaybeMessage<::a2u::request_truck>(Arena*);
template<> ::a2u::world_info* Arena::CreateMaybeMessage<::a2u::world_info>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace a2u {

// ===================================================================

class world_info PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:a2u.world_info) */ {
 public:
  inline world_info() : world_info(nullptr) {}
  ~world_info() override;
  explicit constexpr world_info(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  world_info(const world_info& from);
  world_info(world_info&& from) noexcept
    : world_info() {
    *this = ::std::move(from);
  }

  inline world_info& operator=(const world_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline world_info& operator=(world_info&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const world_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const world_info* internal_default_instance() {
    return reinterpret_cast<const world_info*>(
               &_world_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(world_info& a, world_info& b) {
    a.Swap(&b);
  }
  inline void Swap(world_info* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(world_info* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline world_info* New() const final {
    return CreateMaybeMessage<world_info>(nullptr);
  }

  world_info* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<world_info>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const world_info& from);
  void MergeFrom(const world_info& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(world_info* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "a2u.world_info";
  }
  protected:
  explicit world_info(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorldidFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // required int64 worldid = 1;
  bool has_worldid() const;
  private:
  bool _internal_has_worldid() const;
  public:
  void clear_worldid();
  ::PROTOBUF_NAMESPACE_ID::int64 worldid() const;
  void set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_worldid() const;
  void _internal_set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:a2u.world_info)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 worldid_;
  bool result_;
  friend struct ::TableStruct_a2u_2eproto;
};
// -------------------------------------------------------------------

class request_truck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:a2u.request_truck) */ {
 public:
  inline request_truck() : request_truck(nullptr) {}
  ~request_truck() override;
  explicit constexpr request_truck(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  request_truck(const request_truck& from);
  request_truck(request_truck&& from) noexcept
    : request_truck() {
    *this = ::std::move(from);
  }

  inline request_truck& operator=(const request_truck& from) {
    CopyFrom(from);
    return *this;
  }
  inline request_truck& operator=(request_truck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const request_truck& default_instance() {
    return *internal_default_instance();
  }
  static inline const request_truck* internal_default_instance() {
    return reinterpret_cast<const request_truck*>(
               &_request_truck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(request_truck& a, request_truck& b) {
    a.Swap(&b);
  }
  inline void Swap(request_truck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(request_truck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline request_truck* New() const final {
    return CreateMaybeMessage<request_truck>(nullptr);
  }

  request_truck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<request_truck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const request_truck& from);
  void MergeFrom(const request_truck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(request_truck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "a2u.request_truck";
  }
  protected:
  explicit request_truck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpsAccountIdFieldNumber = 3,
    kItemDescFieldNumber = 6,
    kShipidFieldNumber = 1,
    kWhnumFieldNumber = 2,
    kLocationXFieldNumber = 4,
    kLocationYFieldNumber = 5,
  };
  // optional string ups_account_id = 3;
  bool has_ups_account_id() const;
  private:
  bool _internal_has_ups_account_id() const;
  public:
  void clear_ups_account_id();
  const std::string& ups_account_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ups_account_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ups_account_id();
  std::string* release_ups_account_id();
  void set_allocated_ups_account_id(std::string* ups_account_id);
  private:
  const std::string& _internal_ups_account_id() const;
  void _internal_set_ups_account_id(const std::string& value);
  std::string* _internal_mutable_ups_account_id();
  public:

  // required string item_desc = 6;
  bool has_item_desc() const;
  private:
  bool _internal_has_item_desc() const;
  public:
  void clear_item_desc();
  const std::string& item_desc() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_item_desc(ArgT0&& arg0, ArgT... args);
  std::string* mutable_item_desc();
  std::string* release_item_desc();
  void set_allocated_item_desc(std::string* item_desc);
  private:
  const std::string& _internal_item_desc() const;
  void _internal_set_item_desc(const std::string& value);
  std::string* _internal_mutable_item_desc();
  public:

  // required int64 shipid = 1;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int32 whnum = 2;
  bool has_whnum() const;
  private:
  bool _internal_has_whnum() const;
  public:
  void clear_whnum();
  ::PROTOBUF_NAMESPACE_ID::int32 whnum() const;
  void set_whnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_whnum() const;
  void _internal_set_whnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 location_x = 4;
  bool has_location_x() const;
  private:
  bool _internal_has_location_x() const;
  public:
  void clear_location_x();
  ::PROTOBUF_NAMESPACE_ID::int32 location_x() const;
  void set_location_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_location_x() const;
  void _internal_set_location_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 location_y = 5;
  bool has_location_y() const;
  private:
  bool _internal_has_location_y() const;
  public:
  void clear_location_y();
  ::PROTOBUF_NAMESPACE_ID::int32 location_y() const;
  void set_location_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_location_y() const;
  void _internal_set_location_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:a2u.request_truck)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ups_account_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_desc_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  ::PROTOBUF_NAMESPACE_ID::int32 whnum_;
  ::PROTOBUF_NAMESPACE_ID::int32 location_x_;
  ::PROTOBUF_NAMESPACE_ID::int32 location_y_;
  friend struct ::TableStruct_a2u_2eproto;
};
// -------------------------------------------------------------------

class ready_for_delivery PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:a2u.ready_for_delivery) */ {
 public:
  inline ready_for_delivery() : ready_for_delivery(nullptr) {}
  ~ready_for_delivery() override;
  explicit constexpr ready_for_delivery(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ready_for_delivery(const ready_for_delivery& from);
  ready_for_delivery(ready_for_delivery&& from) noexcept
    : ready_for_delivery() {
    *this = ::std::move(from);
  }

  inline ready_for_delivery& operator=(const ready_for_delivery& from) {
    CopyFrom(from);
    return *this;
  }
  inline ready_for_delivery& operator=(ready_for_delivery&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ready_for_delivery& default_instance() {
    return *internal_default_instance();
  }
  static inline const ready_for_delivery* internal_default_instance() {
    return reinterpret_cast<const ready_for_delivery*>(
               &_ready_for_delivery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ready_for_delivery& a, ready_for_delivery& b) {
    a.Swap(&b);
  }
  inline void Swap(ready_for_delivery* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ready_for_delivery* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ready_for_delivery* New() const final {
    return CreateMaybeMessage<ready_for_delivery>(nullptr);
  }

  ready_for_delivery* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ready_for_delivery>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ready_for_delivery& from);
  void MergeFrom(const ready_for_delivery& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ready_for_delivery* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "a2u.ready_for_delivery";
  }
  protected:
  explicit ready_for_delivery(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShipidFieldNumber = 1,
  };
  // required int64 shipid = 1;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:a2u.ready_for_delivery)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  friend struct ::TableStruct_a2u_2eproto;
};
// -------------------------------------------------------------------

class change_destination PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:a2u.change_destination) */ {
 public:
  inline change_destination() : change_destination(nullptr) {}
  ~change_destination() override;
  explicit constexpr change_destination(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  change_destination(const change_destination& from);
  change_destination(change_destination&& from) noexcept
    : change_destination() {
    *this = ::std::move(from);
  }

  inline change_destination& operator=(const change_destination& from) {
    CopyFrom(from);
    return *this;
  }
  inline change_destination& operator=(change_destination&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const change_destination& default_instance() {
    return *internal_default_instance();
  }
  static inline const change_destination* internal_default_instance() {
    return reinterpret_cast<const change_destination*>(
               &_change_destination_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(change_destination& a, change_destination& b) {
    a.Swap(&b);
  }
  inline void Swap(change_destination* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(change_destination* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline change_destination* New() const final {
    return CreateMaybeMessage<change_destination>(nullptr);
  }

  change_destination* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<change_destination>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const change_destination& from);
  void MergeFrom(const change_destination& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(change_destination* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "a2u.change_destination";
  }
  protected:
  explicit change_destination(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShipidFieldNumber = 1,
    kLocationXFieldNumber = 2,
    kLocationYFieldNumber = 3,
  };
  // required int64 shipid = 1;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int32 location_x = 2;
  bool has_location_x() const;
  private:
  bool _internal_has_location_x() const;
  public:
  void clear_location_x();
  ::PROTOBUF_NAMESPACE_ID::int32 location_x() const;
  void set_location_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_location_x() const;
  void _internal_set_location_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 location_y = 3;
  bool has_location_y() const;
  private:
  bool _internal_has_location_y() const;
  public:
  void clear_location_y();
  ::PROTOBUF_NAMESPACE_ID::int32 location_y() const;
  void set_location_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_location_y() const;
  void _internal_set_location_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:a2u.change_destination)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  ::PROTOBUF_NAMESPACE_ID::int32 location_x_;
  ::PROTOBUF_NAMESPACE_ID::int32 location_y_;
  friend struct ::TableStruct_a2u_2eproto;
};
// -------------------------------------------------------------------

class AToU PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:a2u.AToU) */ {
 public:
  inline AToU() : AToU(nullptr) {}
  ~AToU() override;
  explicit constexpr AToU(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AToU(const AToU& from);
  AToU(AToU&& from) noexcept
    : AToU() {
    *this = ::std::move(from);
  }

  inline AToU& operator=(const AToU& from) {
    CopyFrom(from);
    return *this;
  }
  inline AToU& operator=(AToU&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AToU& default_instance() {
    return *internal_default_instance();
  }
  static inline const AToU* internal_default_instance() {
    return reinterpret_cast<const AToU*>(
               &_AToU_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AToU& a, AToU& b) {
    a.Swap(&b);
  }
  inline void Swap(AToU* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AToU* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AToU* New() const final {
    return CreateMaybeMessage<AToU>(nullptr);
  }

  AToU* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AToU>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AToU& from);
  void MergeFrom(const AToU& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AToU* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "a2u.AToU";
  }
  protected:
  explicit AToU(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorldInfoFieldNumber = 1,
    kRequestFieldNumber = 2,
    kReadyForDeliveryFieldNumber = 3,
    kChangeDestFieldNumber = 4,
  };
  // optional .a2u.world_info worldInfo = 1;
  bool has_worldinfo() const;
  private:
  bool _internal_has_worldinfo() const;
  public:
  void clear_worldinfo();
  const ::a2u::world_info& worldinfo() const;
  ::a2u::world_info* release_worldinfo();
  ::a2u::world_info* mutable_worldinfo();
  void set_allocated_worldinfo(::a2u::world_info* worldinfo);
  private:
  const ::a2u::world_info& _internal_worldinfo() const;
  ::a2u::world_info* _internal_mutable_worldinfo();
  public:
  void unsafe_arena_set_allocated_worldinfo(
      ::a2u::world_info* worldinfo);
  ::a2u::world_info* unsafe_arena_release_worldinfo();

  // optional .a2u.request_truck request = 2;
  bool has_request() const;
  private:
  bool _internal_has_request() const;
  public:
  void clear_request();
  const ::a2u::request_truck& request() const;
  ::a2u::request_truck* release_request();
  ::a2u::request_truck* mutable_request();
  void set_allocated_request(::a2u::request_truck* request);
  private:
  const ::a2u::request_truck& _internal_request() const;
  ::a2u::request_truck* _internal_mutable_request();
  public:
  void unsafe_arena_set_allocated_request(
      ::a2u::request_truck* request);
  ::a2u::request_truck* unsafe_arena_release_request();

  // optional .a2u.ready_for_delivery readyForDelivery = 3;
  bool has_readyfordelivery() const;
  private:
  bool _internal_has_readyfordelivery() const;
  public:
  void clear_readyfordelivery();
  const ::a2u::ready_for_delivery& readyfordelivery() const;
  ::a2u::ready_for_delivery* release_readyfordelivery();
  ::a2u::ready_for_delivery* mutable_readyfordelivery();
  void set_allocated_readyfordelivery(::a2u::ready_for_delivery* readyfordelivery);
  private:
  const ::a2u::ready_for_delivery& _internal_readyfordelivery() const;
  ::a2u::ready_for_delivery* _internal_mutable_readyfordelivery();
  public:
  void unsafe_arena_set_allocated_readyfordelivery(
      ::a2u::ready_for_delivery* readyfordelivery);
  ::a2u::ready_for_delivery* unsafe_arena_release_readyfordelivery();

  // optional .a2u.change_destination changeDest = 4;
  bool has_changedest() const;
  private:
  bool _internal_has_changedest() const;
  public:
  void clear_changedest();
  const ::a2u::change_destination& changedest() const;
  ::a2u::change_destination* release_changedest();
  ::a2u::change_destination* mutable_changedest();
  void set_allocated_changedest(::a2u::change_destination* changedest);
  private:
  const ::a2u::change_destination& _internal_changedest() const;
  ::a2u::change_destination* _internal_mutable_changedest();
  public:
  void unsafe_arena_set_allocated_changedest(
      ::a2u::change_destination* changedest);
  ::a2u::change_destination* unsafe_arena_release_changedest();

  // @@protoc_insertion_point(class_scope:a2u.AToU)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::a2u::world_info* worldinfo_;
  ::a2u::request_truck* request_;
  ::a2u::ready_for_delivery* readyfordelivery_;
  ::a2u::change_destination* changedest_;
  friend struct ::TableStruct_a2u_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// world_info

// required int64 worldid = 1;
inline bool world_info::_internal_has_worldid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool world_info::has_worldid() const {
  return _internal_has_worldid();
}
inline void world_info::clear_worldid() {
  worldid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 world_info::_internal_worldid() const {
  return worldid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 world_info::worldid() const {
  // @@protoc_insertion_point(field_get:a2u.world_info.worldid)
  return _internal_worldid();
}
inline void world_info::_internal_set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  worldid_ = value;
}
inline void world_info::set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_worldid(value);
  // @@protoc_insertion_point(field_set:a2u.world_info.worldid)
}

// required bool result = 2;
inline bool world_info::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool world_info::has_result() const {
  return _internal_has_result();
}
inline void world_info::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool world_info::_internal_result() const {
  return result_;
}
inline bool world_info::result() const {
  // @@protoc_insertion_point(field_get:a2u.world_info.result)
  return _internal_result();
}
inline void world_info::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void world_info::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:a2u.world_info.result)
}

// -------------------------------------------------------------------

// request_truck

// required int64 shipid = 1;
inline bool request_truck::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool request_truck::has_shipid() const {
  return _internal_has_shipid();
}
inline void request_truck::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 request_truck::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 request_truck::shipid() const {
  // @@protoc_insertion_point(field_get:a2u.request_truck.shipid)
  return _internal_shipid();
}
inline void request_truck::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  shipid_ = value;
}
inline void request_truck::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:a2u.request_truck.shipid)
}

// required int32 whnum = 2;
inline bool request_truck::_internal_has_whnum() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool request_truck::has_whnum() const {
  return _internal_has_whnum();
}
inline void request_truck::clear_whnum() {
  whnum_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 request_truck::_internal_whnum() const {
  return whnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 request_truck::whnum() const {
  // @@protoc_insertion_point(field_get:a2u.request_truck.whnum)
  return _internal_whnum();
}
inline void request_truck::_internal_set_whnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  whnum_ = value;
}
inline void request_truck::set_whnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_whnum(value);
  // @@protoc_insertion_point(field_set:a2u.request_truck.whnum)
}

// optional string ups_account_id = 3;
inline bool request_truck::_internal_has_ups_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool request_truck::has_ups_account_id() const {
  return _internal_has_ups_account_id();
}
inline void request_truck::clear_ups_account_id() {
  ups_account_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& request_truck::ups_account_id() const {
  // @@protoc_insertion_point(field_get:a2u.request_truck.ups_account_id)
  return _internal_ups_account_id();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void request_truck::set_ups_account_id(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 ups_account_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:a2u.request_truck.ups_account_id)
}
inline std::string* request_truck::mutable_ups_account_id() {
  // @@protoc_insertion_point(field_mutable:a2u.request_truck.ups_account_id)
  return _internal_mutable_ups_account_id();
}
inline const std::string& request_truck::_internal_ups_account_id() const {
  return ups_account_id_.Get();
}
inline void request_truck::_internal_set_ups_account_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  ups_account_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* request_truck::_internal_mutable_ups_account_id() {
  _has_bits_[0] |= 0x00000001u;
  return ups_account_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* request_truck::release_ups_account_id() {
  // @@protoc_insertion_point(field_release:a2u.request_truck.ups_account_id)
  if (!_internal_has_ups_account_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return ups_account_id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void request_truck::set_allocated_ups_account_id(std::string* ups_account_id) {
  if (ups_account_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ups_account_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ups_account_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:a2u.request_truck.ups_account_id)
}

// required int32 location_x = 4;
inline bool request_truck::_internal_has_location_x() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool request_truck::has_location_x() const {
  return _internal_has_location_x();
}
inline void request_truck::clear_location_x() {
  location_x_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 request_truck::_internal_location_x() const {
  return location_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 request_truck::location_x() const {
  // @@protoc_insertion_point(field_get:a2u.request_truck.location_x)
  return _internal_location_x();
}
inline void request_truck::_internal_set_location_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  location_x_ = value;
}
inline void request_truck::set_location_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_location_x(value);
  // @@protoc_insertion_point(field_set:a2u.request_truck.location_x)
}

// required int32 location_y = 5;
inline bool request_truck::_internal_has_location_y() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool request_truck::has_location_y() const {
  return _internal_has_location_y();
}
inline void request_truck::clear_location_y() {
  location_y_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 request_truck::_internal_location_y() const {
  return location_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 request_truck::location_y() const {
  // @@protoc_insertion_point(field_get:a2u.request_truck.location_y)
  return _internal_location_y();
}
inline void request_truck::_internal_set_location_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  location_y_ = value;
}
inline void request_truck::set_location_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_location_y(value);
  // @@protoc_insertion_point(field_set:a2u.request_truck.location_y)
}

// required string item_desc = 6;
inline bool request_truck::_internal_has_item_desc() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool request_truck::has_item_desc() const {
  return _internal_has_item_desc();
}
inline void request_truck::clear_item_desc() {
  item_desc_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& request_truck::item_desc() const {
  // @@protoc_insertion_point(field_get:a2u.request_truck.item_desc)
  return _internal_item_desc();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void request_truck::set_item_desc(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 item_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:a2u.request_truck.item_desc)
}
inline std::string* request_truck::mutable_item_desc() {
  // @@protoc_insertion_point(field_mutable:a2u.request_truck.item_desc)
  return _internal_mutable_item_desc();
}
inline const std::string& request_truck::_internal_item_desc() const {
  return item_desc_.Get();
}
inline void request_truck::_internal_set_item_desc(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  item_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* request_truck::_internal_mutable_item_desc() {
  _has_bits_[0] |= 0x00000002u;
  return item_desc_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* request_truck::release_item_desc() {
  // @@protoc_insertion_point(field_release:a2u.request_truck.item_desc)
  if (!_internal_has_item_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return item_desc_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void request_truck::set_allocated_item_desc(std::string* item_desc) {
  if (item_desc != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  item_desc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), item_desc,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:a2u.request_truck.item_desc)
}

// -------------------------------------------------------------------

// ready_for_delivery

// required int64 shipid = 1;
inline bool ready_for_delivery::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ready_for_delivery::has_shipid() const {
  return _internal_has_shipid();
}
inline void ready_for_delivery::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ready_for_delivery::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ready_for_delivery::shipid() const {
  // @@protoc_insertion_point(field_get:a2u.ready_for_delivery.shipid)
  return _internal_shipid();
}
inline void ready_for_delivery::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  shipid_ = value;
}
inline void ready_for_delivery::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:a2u.ready_for_delivery.shipid)
}

// -------------------------------------------------------------------

// change_destination

// required int64 shipid = 1;
inline bool change_destination::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool change_destination::has_shipid() const {
  return _internal_has_shipid();
}
inline void change_destination::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 change_destination::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 change_destination::shipid() const {
  // @@protoc_insertion_point(field_get:a2u.change_destination.shipid)
  return _internal_shipid();
}
inline void change_destination::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  shipid_ = value;
}
inline void change_destination::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:a2u.change_destination.shipid)
}

// required int32 location_x = 2;
inline bool change_destination::_internal_has_location_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool change_destination::has_location_x() const {
  return _internal_has_location_x();
}
inline void change_destination::clear_location_x() {
  location_x_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 change_destination::_internal_location_x() const {
  return location_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 change_destination::location_x() const {
  // @@protoc_insertion_point(field_get:a2u.change_destination.location_x)
  return _internal_location_x();
}
inline void change_destination::_internal_set_location_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  location_x_ = value;
}
inline void change_destination::set_location_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_location_x(value);
  // @@protoc_insertion_point(field_set:a2u.change_destination.location_x)
}

// required int32 location_y = 3;
inline bool change_destination::_internal_has_location_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool change_destination::has_location_y() const {
  return _internal_has_location_y();
}
inline void change_destination::clear_location_y() {
  location_y_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 change_destination::_internal_location_y() const {
  return location_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 change_destination::location_y() const {
  // @@protoc_insertion_point(field_get:a2u.change_destination.location_y)
  return _internal_location_y();
}
inline void change_destination::_internal_set_location_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  location_y_ = value;
}
inline void change_destination::set_location_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_location_y(value);
  // @@protoc_insertion_point(field_set:a2u.change_destination.location_y)
}

// -------------------------------------------------------------------

// AToU

// optional .a2u.world_info worldInfo = 1;
inline bool AToU::_internal_has_worldinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || worldinfo_ != nullptr);
  return value;
}
inline bool AToU::has_worldinfo() const {
  return _internal_has_worldinfo();
}
inline void AToU::clear_worldinfo() {
  if (worldinfo_ != nullptr) worldinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::a2u::world_info& AToU::_internal_worldinfo() const {
  const ::a2u::world_info* p = worldinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::a2u::world_info&>(
      ::a2u::_world_info_default_instance_);
}
inline const ::a2u::world_info& AToU::worldinfo() const {
  // @@protoc_insertion_point(field_get:a2u.AToU.worldInfo)
  return _internal_worldinfo();
}
inline void AToU::unsafe_arena_set_allocated_worldinfo(
    ::a2u::world_info* worldinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(worldinfo_);
  }
  worldinfo_ = worldinfo;
  if (worldinfo) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:a2u.AToU.worldInfo)
}
inline ::a2u::world_info* AToU::release_worldinfo() {
  _has_bits_[0] &= ~0x00000001u;
  ::a2u::world_info* temp = worldinfo_;
  worldinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::a2u::world_info* AToU::unsafe_arena_release_worldinfo() {
  // @@protoc_insertion_point(field_release:a2u.AToU.worldInfo)
  _has_bits_[0] &= ~0x00000001u;
  ::a2u::world_info* temp = worldinfo_;
  worldinfo_ = nullptr;
  return temp;
}
inline ::a2u::world_info* AToU::_internal_mutable_worldinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (worldinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::a2u::world_info>(GetArena());
    worldinfo_ = p;
  }
  return worldinfo_;
}
inline ::a2u::world_info* AToU::mutable_worldinfo() {
  // @@protoc_insertion_point(field_mutable:a2u.AToU.worldInfo)
  return _internal_mutable_worldinfo();
}
inline void AToU::set_allocated_worldinfo(::a2u::world_info* worldinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete worldinfo_;
  }
  if (worldinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(worldinfo);
    if (message_arena != submessage_arena) {
      worldinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, worldinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  worldinfo_ = worldinfo;
  // @@protoc_insertion_point(field_set_allocated:a2u.AToU.worldInfo)
}

// optional .a2u.request_truck request = 2;
inline bool AToU::_internal_has_request() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || request_ != nullptr);
  return value;
}
inline bool AToU::has_request() const {
  return _internal_has_request();
}
inline void AToU::clear_request() {
  if (request_ != nullptr) request_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::a2u::request_truck& AToU::_internal_request() const {
  const ::a2u::request_truck* p = request_;
  return p != nullptr ? *p : reinterpret_cast<const ::a2u::request_truck&>(
      ::a2u::_request_truck_default_instance_);
}
inline const ::a2u::request_truck& AToU::request() const {
  // @@protoc_insertion_point(field_get:a2u.AToU.request)
  return _internal_request();
}
inline void AToU::unsafe_arena_set_allocated_request(
    ::a2u::request_truck* request) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(request_);
  }
  request_ = request;
  if (request) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:a2u.AToU.request)
}
inline ::a2u::request_truck* AToU::release_request() {
  _has_bits_[0] &= ~0x00000002u;
  ::a2u::request_truck* temp = request_;
  request_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::a2u::request_truck* AToU::unsafe_arena_release_request() {
  // @@protoc_insertion_point(field_release:a2u.AToU.request)
  _has_bits_[0] &= ~0x00000002u;
  ::a2u::request_truck* temp = request_;
  request_ = nullptr;
  return temp;
}
inline ::a2u::request_truck* AToU::_internal_mutable_request() {
  _has_bits_[0] |= 0x00000002u;
  if (request_ == nullptr) {
    auto* p = CreateMaybeMessage<::a2u::request_truck>(GetArena());
    request_ = p;
  }
  return request_;
}
inline ::a2u::request_truck* AToU::mutable_request() {
  // @@protoc_insertion_point(field_mutable:a2u.AToU.request)
  return _internal_mutable_request();
}
inline void AToU::set_allocated_request(::a2u::request_truck* request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete request_;
  }
  if (request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(request);
    if (message_arena != submessage_arena) {
      request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:a2u.AToU.request)
}

// optional .a2u.ready_for_delivery readyForDelivery = 3;
inline bool AToU::_internal_has_readyfordelivery() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || readyfordelivery_ != nullptr);
  return value;
}
inline bool AToU::has_readyfordelivery() const {
  return _internal_has_readyfordelivery();
}
inline void AToU::clear_readyfordelivery() {
  if (readyfordelivery_ != nullptr) readyfordelivery_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::a2u::ready_for_delivery& AToU::_internal_readyfordelivery() const {
  const ::a2u::ready_for_delivery* p = readyfordelivery_;
  return p != nullptr ? *p : reinterpret_cast<const ::a2u::ready_for_delivery&>(
      ::a2u::_ready_for_delivery_default_instance_);
}
inline const ::a2u::ready_for_delivery& AToU::readyfordelivery() const {
  // @@protoc_insertion_point(field_get:a2u.AToU.readyForDelivery)
  return _internal_readyfordelivery();
}
inline void AToU::unsafe_arena_set_allocated_readyfordelivery(
    ::a2u::ready_for_delivery* readyfordelivery) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(readyfordelivery_);
  }
  readyfordelivery_ = readyfordelivery;
  if (readyfordelivery) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:a2u.AToU.readyForDelivery)
}
inline ::a2u::ready_for_delivery* AToU::release_readyfordelivery() {
  _has_bits_[0] &= ~0x00000004u;
  ::a2u::ready_for_delivery* temp = readyfordelivery_;
  readyfordelivery_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::a2u::ready_for_delivery* AToU::unsafe_arena_release_readyfordelivery() {
  // @@protoc_insertion_point(field_release:a2u.AToU.readyForDelivery)
  _has_bits_[0] &= ~0x00000004u;
  ::a2u::ready_for_delivery* temp = readyfordelivery_;
  readyfordelivery_ = nullptr;
  return temp;
}
inline ::a2u::ready_for_delivery* AToU::_internal_mutable_readyfordelivery() {
  _has_bits_[0] |= 0x00000004u;
  if (readyfordelivery_ == nullptr) {
    auto* p = CreateMaybeMessage<::a2u::ready_for_delivery>(GetArena());
    readyfordelivery_ = p;
  }
  return readyfordelivery_;
}
inline ::a2u::ready_for_delivery* AToU::mutable_readyfordelivery() {
  // @@protoc_insertion_point(field_mutable:a2u.AToU.readyForDelivery)
  return _internal_mutable_readyfordelivery();
}
inline void AToU::set_allocated_readyfordelivery(::a2u::ready_for_delivery* readyfordelivery) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete readyfordelivery_;
  }
  if (readyfordelivery) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(readyfordelivery);
    if (message_arena != submessage_arena) {
      readyfordelivery = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, readyfordelivery, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  readyfordelivery_ = readyfordelivery;
  // @@protoc_insertion_point(field_set_allocated:a2u.AToU.readyForDelivery)
}

// optional .a2u.change_destination changeDest = 4;
inline bool AToU::_internal_has_changedest() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || changedest_ != nullptr);
  return value;
}
inline bool AToU::has_changedest() const {
  return _internal_has_changedest();
}
inline void AToU::clear_changedest() {
  if (changedest_ != nullptr) changedest_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::a2u::change_destination& AToU::_internal_changedest() const {
  const ::a2u::change_destination* p = changedest_;
  return p != nullptr ? *p : reinterpret_cast<const ::a2u::change_destination&>(
      ::a2u::_change_destination_default_instance_);
}
inline const ::a2u::change_destination& AToU::changedest() const {
  // @@protoc_insertion_point(field_get:a2u.AToU.changeDest)
  return _internal_changedest();
}
inline void AToU::unsafe_arena_set_allocated_changedest(
    ::a2u::change_destination* changedest) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(changedest_);
  }
  changedest_ = changedest;
  if (changedest) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:a2u.AToU.changeDest)
}
inline ::a2u::change_destination* AToU::release_changedest() {
  _has_bits_[0] &= ~0x00000008u;
  ::a2u::change_destination* temp = changedest_;
  changedest_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::a2u::change_destination* AToU::unsafe_arena_release_changedest() {
  // @@protoc_insertion_point(field_release:a2u.AToU.changeDest)
  _has_bits_[0] &= ~0x00000008u;
  ::a2u::change_destination* temp = changedest_;
  changedest_ = nullptr;
  return temp;
}
inline ::a2u::change_destination* AToU::_internal_mutable_changedest() {
  _has_bits_[0] |= 0x00000008u;
  if (changedest_ == nullptr) {
    auto* p = CreateMaybeMessage<::a2u::change_destination>(GetArena());
    changedest_ = p;
  }
  return changedest_;
}
inline ::a2u::change_destination* AToU::mutable_changedest() {
  // @@protoc_insertion_point(field_mutable:a2u.AToU.changeDest)
  return _internal_mutable_changedest();
}
inline void AToU::set_allocated_changedest(::a2u::change_destination* changedest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete changedest_;
  }
  if (changedest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(changedest);
    if (message_arena != submessage_arena) {
      changedest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, changedest, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  changedest_ = changedest;
  // @@protoc_insertion_point(field_set_allocated:a2u.AToU.changeDest)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace a2u

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_a2u_2eproto
