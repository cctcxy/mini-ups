// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: u2a.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_u2a_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_u2a_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_u2a_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_u2a_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_u2a_2eproto;
namespace u2a {
class UToA;
struct UToADefaultTypeInternal;
extern UToADefaultTypeInternal _UToA_default_instance_;
class deliver_started;
struct deliver_startedDefaultTypeInternal;
extern deliver_startedDefaultTypeInternal _deliver_started_default_instance_;
class delivered;
struct deliveredDefaultTypeInternal;
extern deliveredDefaultTypeInternal _delivered_default_instance_;
class truck_arrived;
struct truck_arrivedDefaultTypeInternal;
extern truck_arrivedDefaultTypeInternal _truck_arrived_default_instance_;
class world_info;
struct world_infoDefaultTypeInternal;
extern world_infoDefaultTypeInternal _world_info_default_instance_;
}  // namespace u2a
PROTOBUF_NAMESPACE_OPEN
template<> ::u2a::UToA* Arena::CreateMaybeMessage<::u2a::UToA>(Arena*);
template<> ::u2a::deliver_started* Arena::CreateMaybeMessage<::u2a::deliver_started>(Arena*);
template<> ::u2a::delivered* Arena::CreateMaybeMessage<::u2a::delivered>(Arena*);
template<> ::u2a::truck_arrived* Arena::CreateMaybeMessage<::u2a::truck_arrived>(Arena*);
template<> ::u2a::world_info* Arena::CreateMaybeMessage<::u2a::world_info>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace u2a {

// ===================================================================

class world_info PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:u2a.world_info) */ {
 public:
  inline world_info() : world_info(nullptr) {}
  ~world_info() override;
  explicit constexpr world_info(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  world_info(const world_info& from);
  world_info(world_info&& from) noexcept
    : world_info() {
    *this = ::std::move(from);
  }

  inline world_info& operator=(const world_info& from) {
    CopyFrom(from);
    return *this;
  }
  inline world_info& operator=(world_info&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const world_info& default_instance() {
    return *internal_default_instance();
  }
  static inline const world_info* internal_default_instance() {
    return reinterpret_cast<const world_info*>(
               &_world_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(world_info& a, world_info& b) {
    a.Swap(&b);
  }
  inline void Swap(world_info* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(world_info* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline world_info* New() const final {
    return CreateMaybeMessage<world_info>(nullptr);
  }

  world_info* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<world_info>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const world_info& from);
  void MergeFrom(const world_info& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(world_info* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "u2a.world_info";
  }
  protected:
  explicit world_info(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorldidFieldNumber = 1,
  };
  // required int64 worldid = 1;
  bool has_worldid() const;
  private:
  bool _internal_has_worldid() const;
  public:
  void clear_worldid();
  ::PROTOBUF_NAMESPACE_ID::int64 worldid() const;
  void set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_worldid() const;
  void _internal_set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:u2a.world_info)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 worldid_;
  friend struct ::TableStruct_u2a_2eproto;
};
// -------------------------------------------------------------------

class truck_arrived PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:u2a.truck_arrived) */ {
 public:
  inline truck_arrived() : truck_arrived(nullptr) {}
  ~truck_arrived() override;
  explicit constexpr truck_arrived(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  truck_arrived(const truck_arrived& from);
  truck_arrived(truck_arrived&& from) noexcept
    : truck_arrived() {
    *this = ::std::move(from);
  }

  inline truck_arrived& operator=(const truck_arrived& from) {
    CopyFrom(from);
    return *this;
  }
  inline truck_arrived& operator=(truck_arrived&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const truck_arrived& default_instance() {
    return *internal_default_instance();
  }
  static inline const truck_arrived* internal_default_instance() {
    return reinterpret_cast<const truck_arrived*>(
               &_truck_arrived_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(truck_arrived& a, truck_arrived& b) {
    a.Swap(&b);
  }
  inline void Swap(truck_arrived* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(truck_arrived* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline truck_arrived* New() const final {
    return CreateMaybeMessage<truck_arrived>(nullptr);
  }

  truck_arrived* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<truck_arrived>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const truck_arrived& from);
  void MergeFrom(const truck_arrived& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(truck_arrived* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "u2a.truck_arrived";
  }
  protected:
  explicit truck_arrived(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShipidFieldNumber = 1,
    kTruckidFieldNumber = 2,
  };
  // required int64 shipid = 1;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int32 truckid = 2;
  bool has_truckid() const;
  private:
  bool _internal_has_truckid() const;
  public:
  void clear_truckid();
  ::PROTOBUF_NAMESPACE_ID::int32 truckid() const;
  void set_truckid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_truckid() const;
  void _internal_set_truckid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:u2a.truck_arrived)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  ::PROTOBUF_NAMESPACE_ID::int32 truckid_;
  friend struct ::TableStruct_u2a_2eproto;
};
// -------------------------------------------------------------------

class deliver_started PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:u2a.deliver_started) */ {
 public:
  inline deliver_started() : deliver_started(nullptr) {}
  ~deliver_started() override;
  explicit constexpr deliver_started(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  deliver_started(const deliver_started& from);
  deliver_started(deliver_started&& from) noexcept
    : deliver_started() {
    *this = ::std::move(from);
  }

  inline deliver_started& operator=(const deliver_started& from) {
    CopyFrom(from);
    return *this;
  }
  inline deliver_started& operator=(deliver_started&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const deliver_started& default_instance() {
    return *internal_default_instance();
  }
  static inline const deliver_started* internal_default_instance() {
    return reinterpret_cast<const deliver_started*>(
               &_deliver_started_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(deliver_started& a, deliver_started& b) {
    a.Swap(&b);
  }
  inline void Swap(deliver_started* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(deliver_started* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline deliver_started* New() const final {
    return CreateMaybeMessage<deliver_started>(nullptr);
  }

  deliver_started* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<deliver_started>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const deliver_started& from);
  void MergeFrom(const deliver_started& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(deliver_started* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "u2a.deliver_started";
  }
  protected:
  explicit deliver_started(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShipidFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // required int64 shipid = 2;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required bool status = 1;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  bool status() const;
  void set_status(bool value);
  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);
  public:

  // @@protoc_insertion_point(class_scope:u2a.deliver_started)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  bool status_;
  friend struct ::TableStruct_u2a_2eproto;
};
// -------------------------------------------------------------------

class delivered PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:u2a.delivered) */ {
 public:
  inline delivered() : delivered(nullptr) {}
  ~delivered() override;
  explicit constexpr delivered(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  delivered(const delivered& from);
  delivered(delivered&& from) noexcept
    : delivered() {
    *this = ::std::move(from);
  }

  inline delivered& operator=(const delivered& from) {
    CopyFrom(from);
    return *this;
  }
  inline delivered& operator=(delivered&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const delivered& default_instance() {
    return *internal_default_instance();
  }
  static inline const delivered* internal_default_instance() {
    return reinterpret_cast<const delivered*>(
               &_delivered_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(delivered& a, delivered& b) {
    a.Swap(&b);
  }
  inline void Swap(delivered* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(delivered* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline delivered* New() const final {
    return CreateMaybeMessage<delivered>(nullptr);
  }

  delivered* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<delivered>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const delivered& from);
  void MergeFrom(const delivered& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(delivered* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "u2a.delivered";
  }
  protected:
  explicit delivered(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShipidFieldNumber = 1,
  };
  // required int64 shipid = 1;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:u2a.delivered)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  friend struct ::TableStruct_u2a_2eproto;
};
// -------------------------------------------------------------------

class UToA PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:u2a.UToA) */ {
 public:
  inline UToA() : UToA(nullptr) {}
  ~UToA() override;
  explicit constexpr UToA(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UToA(const UToA& from);
  UToA(UToA&& from) noexcept
    : UToA() {
    *this = ::std::move(from);
  }

  inline UToA& operator=(const UToA& from) {
    CopyFrom(from);
    return *this;
  }
  inline UToA& operator=(UToA&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UToA& default_instance() {
    return *internal_default_instance();
  }
  static inline const UToA* internal_default_instance() {
    return reinterpret_cast<const UToA*>(
               &_UToA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UToA& a, UToA& b) {
    a.Swap(&b);
  }
  inline void Swap(UToA* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UToA* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UToA* New() const final {
    return CreateMaybeMessage<UToA>(nullptr);
  }

  UToA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UToA>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UToA& from);
  void MergeFrom(const UToA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UToA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "u2a.UToA";
  }
  protected:
  explicit UToA(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorldInfoFieldNumber = 1,
    kTruckArrivedFieldNumber = 2,
    kDeliverStartedFieldNumber = 3,
    kDeliveredFieldNumber = 4,
  };
  // optional .u2a.world_info worldInfo = 1;
  bool has_worldinfo() const;
  private:
  bool _internal_has_worldinfo() const;
  public:
  void clear_worldinfo();
  const ::u2a::world_info& worldinfo() const;
  ::u2a::world_info* release_worldinfo();
  ::u2a::world_info* mutable_worldinfo();
  void set_allocated_worldinfo(::u2a::world_info* worldinfo);
  private:
  const ::u2a::world_info& _internal_worldinfo() const;
  ::u2a::world_info* _internal_mutable_worldinfo();
  public:
  void unsafe_arena_set_allocated_worldinfo(
      ::u2a::world_info* worldinfo);
  ::u2a::world_info* unsafe_arena_release_worldinfo();

  // optional .u2a.truck_arrived truckArrived = 2;
  bool has_truckarrived() const;
  private:
  bool _internal_has_truckarrived() const;
  public:
  void clear_truckarrived();
  const ::u2a::truck_arrived& truckarrived() const;
  ::u2a::truck_arrived* release_truckarrived();
  ::u2a::truck_arrived* mutable_truckarrived();
  void set_allocated_truckarrived(::u2a::truck_arrived* truckarrived);
  private:
  const ::u2a::truck_arrived& _internal_truckarrived() const;
  ::u2a::truck_arrived* _internal_mutable_truckarrived();
  public:
  void unsafe_arena_set_allocated_truckarrived(
      ::u2a::truck_arrived* truckarrived);
  ::u2a::truck_arrived* unsafe_arena_release_truckarrived();

  // optional .u2a.deliver_started deliverStarted = 3;
  bool has_deliverstarted() const;
  private:
  bool _internal_has_deliverstarted() const;
  public:
  void clear_deliverstarted();
  const ::u2a::deliver_started& deliverstarted() const;
  ::u2a::deliver_started* release_deliverstarted();
  ::u2a::deliver_started* mutable_deliverstarted();
  void set_allocated_deliverstarted(::u2a::deliver_started* deliverstarted);
  private:
  const ::u2a::deliver_started& _internal_deliverstarted() const;
  ::u2a::deliver_started* _internal_mutable_deliverstarted();
  public:
  void unsafe_arena_set_allocated_deliverstarted(
      ::u2a::deliver_started* deliverstarted);
  ::u2a::deliver_started* unsafe_arena_release_deliverstarted();

  // optional .u2a.delivered delivered = 4;
  bool has_delivered() const;
  private:
  bool _internal_has_delivered() const;
  public:
  void clear_delivered();
  const ::u2a::delivered& delivered() const;
  ::u2a::delivered* release_delivered();
  ::u2a::delivered* mutable_delivered();
  void set_allocated_delivered(::u2a::delivered* delivered);
  private:
  const ::u2a::delivered& _internal_delivered() const;
  ::u2a::delivered* _internal_mutable_delivered();
  public:
  void unsafe_arena_set_allocated_delivered(
      ::u2a::delivered* delivered);
  ::u2a::delivered* unsafe_arena_release_delivered();

  // @@protoc_insertion_point(class_scope:u2a.UToA)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::u2a::world_info* worldinfo_;
  ::u2a::truck_arrived* truckarrived_;
  ::u2a::deliver_started* deliverstarted_;
  ::u2a::delivered* delivered_;
  friend struct ::TableStruct_u2a_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// world_info

// required int64 worldid = 1;
inline bool world_info::_internal_has_worldid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool world_info::has_worldid() const {
  return _internal_has_worldid();
}
inline void world_info::clear_worldid() {
  worldid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 world_info::_internal_worldid() const {
  return worldid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 world_info::worldid() const {
  // @@protoc_insertion_point(field_get:u2a.world_info.worldid)
  return _internal_worldid();
}
inline void world_info::_internal_set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  worldid_ = value;
}
inline void world_info::set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_worldid(value);
  // @@protoc_insertion_point(field_set:u2a.world_info.worldid)
}

// -------------------------------------------------------------------

// truck_arrived

// required int64 shipid = 1;
inline bool truck_arrived::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool truck_arrived::has_shipid() const {
  return _internal_has_shipid();
}
inline void truck_arrived::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 truck_arrived::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 truck_arrived::shipid() const {
  // @@protoc_insertion_point(field_get:u2a.truck_arrived.shipid)
  return _internal_shipid();
}
inline void truck_arrived::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  shipid_ = value;
}
inline void truck_arrived::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:u2a.truck_arrived.shipid)
}

// required int32 truckid = 2;
inline bool truck_arrived::_internal_has_truckid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool truck_arrived::has_truckid() const {
  return _internal_has_truckid();
}
inline void truck_arrived::clear_truckid() {
  truckid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 truck_arrived::_internal_truckid() const {
  return truckid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 truck_arrived::truckid() const {
  // @@protoc_insertion_point(field_get:u2a.truck_arrived.truckid)
  return _internal_truckid();
}
inline void truck_arrived::_internal_set_truckid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  truckid_ = value;
}
inline void truck_arrived::set_truckid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_truckid(value);
  // @@protoc_insertion_point(field_set:u2a.truck_arrived.truckid)
}

// -------------------------------------------------------------------

// deliver_started

// required bool status = 1;
inline bool deliver_started::_internal_has_status() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool deliver_started::has_status() const {
  return _internal_has_status();
}
inline void deliver_started::clear_status() {
  status_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool deliver_started::_internal_status() const {
  return status_;
}
inline bool deliver_started::status() const {
  // @@protoc_insertion_point(field_get:u2a.deliver_started.status)
  return _internal_status();
}
inline void deliver_started::_internal_set_status(bool value) {
  _has_bits_[0] |= 0x00000002u;
  status_ = value;
}
inline void deliver_started::set_status(bool value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:u2a.deliver_started.status)
}

// required int64 shipid = 2;
inline bool deliver_started::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool deliver_started::has_shipid() const {
  return _internal_has_shipid();
}
inline void deliver_started::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 deliver_started::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 deliver_started::shipid() const {
  // @@protoc_insertion_point(field_get:u2a.deliver_started.shipid)
  return _internal_shipid();
}
inline void deliver_started::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  shipid_ = value;
}
inline void deliver_started::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:u2a.deliver_started.shipid)
}

// -------------------------------------------------------------------

// delivered

// required int64 shipid = 1;
inline bool delivered::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool delivered::has_shipid() const {
  return _internal_has_shipid();
}
inline void delivered::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 delivered::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 delivered::shipid() const {
  // @@protoc_insertion_point(field_get:u2a.delivered.shipid)
  return _internal_shipid();
}
inline void delivered::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  shipid_ = value;
}
inline void delivered::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:u2a.delivered.shipid)
}

// -------------------------------------------------------------------

// UToA

// optional .u2a.world_info worldInfo = 1;
inline bool UToA::_internal_has_worldinfo() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || worldinfo_ != nullptr);
  return value;
}
inline bool UToA::has_worldinfo() const {
  return _internal_has_worldinfo();
}
inline void UToA::clear_worldinfo() {
  if (worldinfo_ != nullptr) worldinfo_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::u2a::world_info& UToA::_internal_worldinfo() const {
  const ::u2a::world_info* p = worldinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::u2a::world_info&>(
      ::u2a::_world_info_default_instance_);
}
inline const ::u2a::world_info& UToA::worldinfo() const {
  // @@protoc_insertion_point(field_get:u2a.UToA.worldInfo)
  return _internal_worldinfo();
}
inline void UToA::unsafe_arena_set_allocated_worldinfo(
    ::u2a::world_info* worldinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(worldinfo_);
  }
  worldinfo_ = worldinfo;
  if (worldinfo) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:u2a.UToA.worldInfo)
}
inline ::u2a::world_info* UToA::release_worldinfo() {
  _has_bits_[0] &= ~0x00000001u;
  ::u2a::world_info* temp = worldinfo_;
  worldinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::u2a::world_info* UToA::unsafe_arena_release_worldinfo() {
  // @@protoc_insertion_point(field_release:u2a.UToA.worldInfo)
  _has_bits_[0] &= ~0x00000001u;
  ::u2a::world_info* temp = worldinfo_;
  worldinfo_ = nullptr;
  return temp;
}
inline ::u2a::world_info* UToA::_internal_mutable_worldinfo() {
  _has_bits_[0] |= 0x00000001u;
  if (worldinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::u2a::world_info>(GetArena());
    worldinfo_ = p;
  }
  return worldinfo_;
}
inline ::u2a::world_info* UToA::mutable_worldinfo() {
  // @@protoc_insertion_point(field_mutable:u2a.UToA.worldInfo)
  return _internal_mutable_worldinfo();
}
inline void UToA::set_allocated_worldinfo(::u2a::world_info* worldinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete worldinfo_;
  }
  if (worldinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(worldinfo);
    if (message_arena != submessage_arena) {
      worldinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, worldinfo, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  worldinfo_ = worldinfo;
  // @@protoc_insertion_point(field_set_allocated:u2a.UToA.worldInfo)
}

// optional .u2a.truck_arrived truckArrived = 2;
inline bool UToA::_internal_has_truckarrived() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || truckarrived_ != nullptr);
  return value;
}
inline bool UToA::has_truckarrived() const {
  return _internal_has_truckarrived();
}
inline void UToA::clear_truckarrived() {
  if (truckarrived_ != nullptr) truckarrived_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::u2a::truck_arrived& UToA::_internal_truckarrived() const {
  const ::u2a::truck_arrived* p = truckarrived_;
  return p != nullptr ? *p : reinterpret_cast<const ::u2a::truck_arrived&>(
      ::u2a::_truck_arrived_default_instance_);
}
inline const ::u2a::truck_arrived& UToA::truckarrived() const {
  // @@protoc_insertion_point(field_get:u2a.UToA.truckArrived)
  return _internal_truckarrived();
}
inline void UToA::unsafe_arena_set_allocated_truckarrived(
    ::u2a::truck_arrived* truckarrived) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(truckarrived_);
  }
  truckarrived_ = truckarrived;
  if (truckarrived) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:u2a.UToA.truckArrived)
}
inline ::u2a::truck_arrived* UToA::release_truckarrived() {
  _has_bits_[0] &= ~0x00000002u;
  ::u2a::truck_arrived* temp = truckarrived_;
  truckarrived_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::u2a::truck_arrived* UToA::unsafe_arena_release_truckarrived() {
  // @@protoc_insertion_point(field_release:u2a.UToA.truckArrived)
  _has_bits_[0] &= ~0x00000002u;
  ::u2a::truck_arrived* temp = truckarrived_;
  truckarrived_ = nullptr;
  return temp;
}
inline ::u2a::truck_arrived* UToA::_internal_mutable_truckarrived() {
  _has_bits_[0] |= 0x00000002u;
  if (truckarrived_ == nullptr) {
    auto* p = CreateMaybeMessage<::u2a::truck_arrived>(GetArena());
    truckarrived_ = p;
  }
  return truckarrived_;
}
inline ::u2a::truck_arrived* UToA::mutable_truckarrived() {
  // @@protoc_insertion_point(field_mutable:u2a.UToA.truckArrived)
  return _internal_mutable_truckarrived();
}
inline void UToA::set_allocated_truckarrived(::u2a::truck_arrived* truckarrived) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete truckarrived_;
  }
  if (truckarrived) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(truckarrived);
    if (message_arena != submessage_arena) {
      truckarrived = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, truckarrived, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  truckarrived_ = truckarrived;
  // @@protoc_insertion_point(field_set_allocated:u2a.UToA.truckArrived)
}

// optional .u2a.deliver_started deliverStarted = 3;
inline bool UToA::_internal_has_deliverstarted() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || deliverstarted_ != nullptr);
  return value;
}
inline bool UToA::has_deliverstarted() const {
  return _internal_has_deliverstarted();
}
inline void UToA::clear_deliverstarted() {
  if (deliverstarted_ != nullptr) deliverstarted_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::u2a::deliver_started& UToA::_internal_deliverstarted() const {
  const ::u2a::deliver_started* p = deliverstarted_;
  return p != nullptr ? *p : reinterpret_cast<const ::u2a::deliver_started&>(
      ::u2a::_deliver_started_default_instance_);
}
inline const ::u2a::deliver_started& UToA::deliverstarted() const {
  // @@protoc_insertion_point(field_get:u2a.UToA.deliverStarted)
  return _internal_deliverstarted();
}
inline void UToA::unsafe_arena_set_allocated_deliverstarted(
    ::u2a::deliver_started* deliverstarted) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(deliverstarted_);
  }
  deliverstarted_ = deliverstarted;
  if (deliverstarted) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:u2a.UToA.deliverStarted)
}
inline ::u2a::deliver_started* UToA::release_deliverstarted() {
  _has_bits_[0] &= ~0x00000004u;
  ::u2a::deliver_started* temp = deliverstarted_;
  deliverstarted_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::u2a::deliver_started* UToA::unsafe_arena_release_deliverstarted() {
  // @@protoc_insertion_point(field_release:u2a.UToA.deliverStarted)
  _has_bits_[0] &= ~0x00000004u;
  ::u2a::deliver_started* temp = deliverstarted_;
  deliverstarted_ = nullptr;
  return temp;
}
inline ::u2a::deliver_started* UToA::_internal_mutable_deliverstarted() {
  _has_bits_[0] |= 0x00000004u;
  if (deliverstarted_ == nullptr) {
    auto* p = CreateMaybeMessage<::u2a::deliver_started>(GetArena());
    deliverstarted_ = p;
  }
  return deliverstarted_;
}
inline ::u2a::deliver_started* UToA::mutable_deliverstarted() {
  // @@protoc_insertion_point(field_mutable:u2a.UToA.deliverStarted)
  return _internal_mutable_deliverstarted();
}
inline void UToA::set_allocated_deliverstarted(::u2a::deliver_started* deliverstarted) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete deliverstarted_;
  }
  if (deliverstarted) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(deliverstarted);
    if (message_arena != submessage_arena) {
      deliverstarted = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, deliverstarted, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  deliverstarted_ = deliverstarted;
  // @@protoc_insertion_point(field_set_allocated:u2a.UToA.deliverStarted)
}

// optional .u2a.delivered delivered = 4;
inline bool UToA::_internal_has_delivered() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || delivered_ != nullptr);
  return value;
}
inline bool UToA::has_delivered() const {
  return _internal_has_delivered();
}
inline void UToA::clear_delivered() {
  if (delivered_ != nullptr) delivered_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::u2a::delivered& UToA::_internal_delivered() const {
  const ::u2a::delivered* p = delivered_;
  return p != nullptr ? *p : reinterpret_cast<const ::u2a::delivered&>(
      ::u2a::_delivered_default_instance_);
}
inline const ::u2a::delivered& UToA::delivered() const {
  // @@protoc_insertion_point(field_get:u2a.UToA.delivered)
  return _internal_delivered();
}
inline void UToA::unsafe_arena_set_allocated_delivered(
    ::u2a::delivered* delivered) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(delivered_);
  }
  delivered_ = delivered;
  if (delivered) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:u2a.UToA.delivered)
}
inline ::u2a::delivered* UToA::release_delivered() {
  _has_bits_[0] &= ~0x00000008u;
  ::u2a::delivered* temp = delivered_;
  delivered_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::u2a::delivered* UToA::unsafe_arena_release_delivered() {
  // @@protoc_insertion_point(field_release:u2a.UToA.delivered)
  _has_bits_[0] &= ~0x00000008u;
  ::u2a::delivered* temp = delivered_;
  delivered_ = nullptr;
  return temp;
}
inline ::u2a::delivered* UToA::_internal_mutable_delivered() {
  _has_bits_[0] |= 0x00000008u;
  if (delivered_ == nullptr) {
    auto* p = CreateMaybeMessage<::u2a::delivered>(GetArena());
    delivered_ = p;
  }
  return delivered_;
}
inline ::u2a::delivered* UToA::mutable_delivered() {
  // @@protoc_insertion_point(field_mutable:u2a.UToA.delivered)
  return _internal_mutable_delivered();
}
inline void UToA::set_allocated_delivered(::u2a::delivered* delivered) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete delivered_;
  }
  if (delivered) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(delivered);
    if (message_arena != submessage_arena) {
      delivered = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delivered, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  delivered_ = delivered;
  // @@protoc_insertion_point(field_set_allocated:u2a.UToA.delivered)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace u2a

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_u2a_2eproto
